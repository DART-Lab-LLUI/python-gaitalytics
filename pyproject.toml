[build-system]
requires = ["setuptools>=64", "setuptools_scm[toml]>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "gaitalytics"
dynamic = ["version"]
description = "easy gait-metrics for everyone"
authors = [{ name = "André Böni", email = "andre.boeni@llui.org" }]
maintainers = [{ name = "André Böni", email = "andre.boeni@llui.org" }]
readme = "README.rst"
license = { file = "LICENSE" }
keywords = ["gait-analysis", "mocap", "c3d", "gait-metrics", "biomechanics"]
classifiers = [
    # How mature is this project? Common values are
    #   3 - Alpha
    #   4 - Beta
    #   5 - Production/Stable
    "Development Status :: 4 - Beta",
    # Indicate who your project is intended for
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Utilities",
    # Pick your license as you wish (see also "license" above)
    "License :: OSI Approved :: MIT License",
    # Specify the Python versions you support here.
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    ]
requires-python = ">= 3.11"
dependencies = ["h5netcdf>=1.3.0",
    "pandas>=1.5",
    "pyyaml>=6.0.1",
    "scipy>=1.13",
    "numpy>=1.23",
    "pyomeca>=2021.0",
    "ezc3d>=1.5",
    "xarray>=20.6",]

[project.urls]
Homepage = "https://github.com/DART-Lab-LLUI/python-gaitalytics"
Documentation = "https://python-gaitalytics.readthedocs.io"
Repository = "https://github.com/DART-Lab-LLUI/python-gaitalytics"
Issues = "https://github.com/DART-Lab-LLUI/python-gaitalytics/issues"
Changelog = "https://github.com/me/spam/blob/master/CHANGELOG.md"

[project.optional-dependencies]
dev = ["ruff", "mypy", "pip", "types-PyYAML"]
test = ["pytest", "pytest-cov"]
build = ["build", "setuptools>=64", "setuptools_scm>=8"]
docs = ["sphinx",
    "setuptools>=64",
    "sphinx-rtd-theme",
    "sphinx-autodoc-typehints",
    "sphinx_github_changelog",
    "sphinx-codeautolink",
    "sphinxcontrib-bibtex"]

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["win-64", "linux-64", "osx-64", "osx-arm64"]

[tool.pixi.pypi-dependencies]
gaitalytics = { path = ".", editable = true }

[tool.pixi.dependencies]
pixi-pycharm = "*"


# Environments
[tool.pixi.environments]
dev = { features = ["py311", "test", "dev"] }
build = { features = ["build", "py311"] }
docs = { features = ["docs", "py311"] }
py311 = { features = ["py311", "test"] }
py312 = { features = ["py312", "test"] }

[tool.pixi.feature.build.dependencies]
boa = ">=0.17.0,<0.18.0"
yaml = ">=0.2.5,<0.3.0"
conda-verify = ">=3.4.2,<3.5.0"
anaconda-client= ">=1.12.0,<1.13.0"


[tool.pixi.feature.py311.dependencies]
python = ">=3.11,<3.12"

[tool.pixi.feature.py312.dependencies]
python = ">=3.12.0,<3.13.0"

[tool.pixi.feature.docs.tasks]
docs = "sphinx-build -M html ./docs ./docs/_build --keep-going"
readthedocs = { cmd = "rm -rf $READTHEDOCS_OUTPUT/html && cp -r docs/_build/html $READTHEDOCS_OUTPUT/html", depends_on = ["docs"] }

[tool.pixi.tasks]
test-full = "pytest -vv --cov=gaitalytics --cov-report=term-missing --cov-config=.coveragerc --capture=sys -p no:warnings"
test-api = "pytest -vv --capture=sys tests/test_api.py -p no:warnings"

[tool.pixi.feature.dev.tasks]
ruff-format = "ruff format gaitalytics"
ruff-check = { cmd = "ruff check gaitalytics --fix", depends-on = ["ruff-format"] }
check-code = { cmd = "mypy gaitalytics --check-untyped-defs", depends-on = ["ruff-check"] }

[tool.pixi.feature.build.tasks]
build = "python -m build -n"
sdist = "python -m build --sdist -n"
wheel = "python -m build --wheel -n"
conda-build = { cmd ="conda mambabuild . -c conda-forge --output-folder conda-build" }

[tool.setuptools]
packages = ["gaitalytics", "gaitalytics.utils"]

[tool.setuptools_scm]

[tool.ruff-lint]
select = [
    "E", "F", "B", "UP", "D"
]
pydocstyle = "google"

[tool.mypy]
python_version = "3.11"
ignore_missing_imports = "True"




